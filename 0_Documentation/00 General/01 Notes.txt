
++++++++++++RUN COMMANDS++++++++++++++

Start client
> cd client-app
> npm start

RUN API, VS Code
- Under Terminal, using dotnet cli
- Only works inside the context of the startup project, error in solution level even with -p switch
> cd API
> dotnet watch run

- Specify startup project
- Run:
> dotnet run -p API/

Recommend dotnet cli in creating Projects

Check versions:
> dotnet --info

Help for dotnet cli
> dotnet -h
> dotnet new -h
> dotnet new <shortname>

...

Install packages (must be same as netcore version)
- open command shell (ctrl+shift+p)
- Nuget Package Manager: Add Package
- Add to Project
- Restore pop-up window

++++++++++++EF Codes ADD MIGRATION++++++++++++++
!!!IN SOLUTION LEVEL
!specify -p is the persistence project
!specify -s is the startup project
> dotnet ef migrations add InitialCreate -p Persistence/ -s API/

!updates to the latest migration if no migration is specified
> dotnet ef database update <migration>

!create new migration for seed
-p for datacontext project
-s startup project
> dotnet ef migrations add SeedValues -p Persistence/ -s API/

++++++++++++RESETTING DATABASE++++++++++++++
1. Inside VS Code Terminal Window, inside solution folder

2. Drop database
- Specify persistence project and startup project

dotnet ef database drop -p Persistence/ -s API/

3. Re run Api since we have migration setup in startup
dotnet watch run

++++++++++++POSTMAN FEATURES++++++++++++++
1. Variables
- under collections > edit
- rightmost tab "Parameters"
- set value for parameter "url"
- usage: {{url}}/api/activities

2. Creating Collections
https://learning.getpostman.com/docs/postman/collections/intro_to_collections/

++++++++++++API SECURITY++++++++++++++

1. TokenValidationParameters
https://docs.microsoft.com/en-us/dotnet/api/microsoft.identitymodel.tokens.tokenvalidationparameters?view=azure-dotnet
- ValidateAudience - Validation of the audience, mitigates forwarding attacks. For example, a site that receives a token, could not replay it to another side.
- ValidateIssuer - Gets or sets a String that represents a valid issuer that will be used to check against the token's issuer.

++++++++++++++Set User Secrets++++++++++++++
1. In the Api.csproj file add User Secrets id
- ex. copy existing Guid from an Activity id
<PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
	<UserSecretsId>a09d8666-de6a-45b7-82ae-69e8d8e33cd1</UserSecretsId>
</PropertyGroup>

2. In VS Code terminal, Solution level
-p : specify startup project
dotnet user-secrets set "TokenKey" "super secret key" -p API/
