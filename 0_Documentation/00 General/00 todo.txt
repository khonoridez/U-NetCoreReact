++++++++++++TODO++++++++++++++

++++++++++++Apply API Best Practices++++++++++++
1. Async
2. Naming methods
3. Attributes, Validations
- Applied Fluent Validation
- Applied ValidatorExtensions for Password

4. Returning error codes (extension method?)
- UserController/CurrentUser returns 500 for no/invalid token
	Resolution: this is because [AllowAnonymous] is set for the whole Controller, 
	Adjusted [AllowAnonymous] attribute, this will now prodice 401 unauthorized error

5. Compare Api Architecture (No MediatR)
5.1 Complete Core Angular
- Angular tuts has non decoupled architecture
5.2 Mosh Full Stack

++++++++++++.Wait(); usages++++++++++++
ex. Seed.SeedData(context, userManager).Wait();

++++++++++++Front end++++++++++++
1. Create interfaces/classes for Api objects
- Sample was created Chapter 5

++++++++++++CQRS++++++++++++
1. On User/Register.cs
- Refactor register and logging in user

++++++++++++SECURITY++++++++++++

1. add as User Secret
- CORS magic string "CorsPolicy"

++++++++++++WARNING IN ACTIVITYFORM EDIT++++++++++++

backend.js:6 Warning: componentWillMount has been renamed, and is not recommended for use. 
See https://fb.me/react-unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 17.x, only the 
UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.

Please update the following components: Uncontrolled(DateTimePicker)

backend.js:6 Warning: componentWillReceiveProps has been renamed, and is not recommended for use. 
See https://fb.me/react-unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static 
getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. 
In React 17.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run 
`npx react-codemod rename-unsafe-lifecycles` in your project source folder.

Please update the following components: Uncontrolled(DateTimePicker)

++++++++++++++Register Form validation UserName, Email already exist not triggering both++++++++++++++
In Register Command:
public async Task<User> Handle(Command request, CancellationToken cancellationToken)
{
    if (await _context.Users.Where(x => x.Email == request.Email).AnyAsync())
        throw new RestException(HttpStatusCode.BadRequest, new { Email = "Email already exist" });

    if (await _context.Users.Where(x => x.UserName == request.UserName).AnyAsync())
        throw new RestException(HttpStatusCode.BadRequest, new { UserName = "Username already exist" });
	...
