++++++++++++TODO++++++++++++++

++++++++++++Apply API Best Practices++++++++++++
1. Async
2. Naming methods
3. Attributes, Validations
- Applied Fluent Validation
- Applied ValidatorExtensions for Password

4. Returning error codes (extension method?)
- UserController/CurrentUser returns 500 for no/invalid token
	Resolution: this is because [AllowAnonymous] is set for the whole Controller, 
	Adjusted [AllowAnonymous] attribute, this will now prodice 401 unauthorized error

5. Compare Api Architecture (No MediatR)
5.1 Complete Core Angular
- Angular tuts has non decoupled architecture
5.2 Mosh Full Stack

++++++++++++.Wait(); usages++++++++++++
ex. Seed.SeedData(context, userManager).Wait();

++++++++++++Front end++++++++++++
1. Create interfaces/classes for Api objects
- Sample was created Chapter 5

++++++++++++CQRS++++++++++++
1. On User/Register.cs
- Refactor register and logging in user

++++++++++++SECURITY++++++++++++

1. add as User Secret
- CORS magic string "CorsPolicy"

++++++++++++WARNING IN ACTIVITYFORM EDIT++++++++++++

backend.js:6 Warning: componentWillMount has been renamed, and is not recommended for use. 
See https://fb.me/react-unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 17.x, only the 
UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.

Please update the following components: Uncontrolled(DateTimePicker)

backend.js:6 Warning: componentWillReceiveProps has been renamed, and is not recommended for use. 
See https://fb.me/react-unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static 
getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. 
In React 17.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run 
`npx react-codemod rename-unsafe-lifecycles` in your project source folder.

Please update the following components: Uncontrolled(DateTimePicker)

++++++++++++++Register Form validation UserName, Email already exist not triggering both++++++++++++++
In Register Command:
public async Task<User> Handle(Command request, CancellationToken cancellationToken)
{
    if (await _context.Users.Where(x => x.Email == request.Email).AnyAsync())
        throw new RestException(HttpStatusCode.BadRequest, new { Email = "Email already exist" });

    if (await _context.Users.Where(x => x.UserName == request.UserName).AnyAsync())
        throw new RestException(HttpStatusCode.BadRequest, new { UserName = "Username already exist" });
	...

++++++++++++++Injecting Assemblies++++++++++++++
- In both MediatR and AutoMapper, 
- passing in values of typeof(List.Handler).Assembly is used
- This means I am passing the Assembly where List.Handler is located
- What are other options to pass correct assemblies?

services.AddMediatR(typeof(List.Handler).Assembly);
services.AddAutoMapper(typeof(List.Handler).Assembly);

++++++++++++++AuthorizationFilterContext is no longer available in HandleRequirementAsync()++++++++++++++
!!Error - in /Infrastructure/Security/IsHostRequirement.cs code not triggering this conditional statement
if (context.Resource is AuthorizationFilterContext mvcContext) // in 3.0 results in null
https://github.com/aspnet/AspNetCore.Docs/issues/12564

++++++++++++++SetMain Photo API++++++++++++++
- Getting 500 Internal Server Error when setting main photo to a main photo

++++++++++++++End Point URL magic numbers on client side++++++++++++++
- look for resolution on magic numbers
ex. unattend: (id: string) => requests.del(`/activities/${id}/attend`)

++++++++++++++UPDATE React-Cropper++++++++++++++
https://github.com/roadmanfong/react-cropper/issues
- It appears that the React-Cropper along with cropperjs updates altered behaviors with the inheritance

Current Cropper settings (as of 11/1/2019):
"@types/cropperjs": "^1.1.5",
 "cropperjs": "^1.5.6",
 "react-cropper": "^1.3.0",
...
"dependencies": {
    "babel-core": "7.0.0-bridge.0",
    "cropperjs": "^1.5.5",
    "prop-types": "^15.5.8"
  },

Tutorials Cropper settings:
"@types/cropperjs": "^1.1.5",
"react-cropper": "^1.2.0",
...
"dependencies": {
    "babel-core": "7.0.0-bridge.0",
    "cropperjs": "v1.0.0-rc.3",
    "prop-types": "^15.5.8"

Resolution:
npm install react-cropper@1.2.0

++++++++++++++Updating Profile, Comments section does not update++++++++++++++
- When profile is modified, profile detailes in comment section does not update
- photo, displayName

++++++++++++++Logging Information for chat system++++++++++++++
- This is active as per tutorial

++++++++++++++ProfileContent setActiveTab has type of any++++++++++++++
interface IProps {
  setActiveTab: (activeIndex: any) => void;
}

++++++++++++++Magic Numbers++++++++++++++
1. agent.ts

2. activeTab on
- ProfileFollowings
- ProfileStore

3. predicate on
- ProfileStore

4. filter strings (predicates)
- ActivityStore
- ActivityFilters
- \Application\Profiles\ListActivities.cs
- client-app\src\features\profiles\ProfileActivities.tsx

5. toast messages, toast.error()
- in all stores

6. Loading App...
- client-app\public\index.html
- client-app\src\app\layout\App.tsx

7. CORS setting .WithOrigins("http://localhost:3000")
 services.AddCors(opt =>
    {
        opt.AddPolicy("CorsPolicy", policy =>
        {
            policy
            .WithOrigins("http://localhost:3000")
            ....
        });
    });

8. agent.ts error 401 header condition
  if (
    status === 401 &&
    headers["www-authenticate"] ===
      'Bearer error="invalid_token", error_description="The token is expired"'
  ) {
    window.localStorage.removeItem("jwt");
    history.push("/");
    toast.info("Your session has expired, please login again");
  }

++++++++++++++Filters++++++++++++++
1. Combine Filters
- IsGoing + startDate

++++++++++++++Console Log usage++++++++++++++
- Magic numbers
- In all Stores

++++++++++++++User Activity Loader++++++++++++++
- Adjust loader in content

++++++++++++++Register Modal Errors++++++++++++++
- Server messages gets rendered in bullet list
- Bug: Register should log me in

- Bug: System.ArgumentNullException: Value cannot be null. (Parameter 'source')
Resolved: add null coalescing operator

++++++++++++++EntityFrameworkCore MySql++++++++++++++
https://github.com/PomeloFoundation/Pomelo.EntityFrameworkCore.MySql
- used in MySqlMigrations
- Still on release candidate
Pomelo.EntityFrameworkCore.MySql (3.0.0-rc3.final)

